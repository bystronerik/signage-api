type AssetList {
    id: ID!
    name: String!
    type: String!
    animationIn: Style
    animationOut: Style
    validity: Validity
    prioritized: Boolean
    enabled: Boolean!
    assets: [AssetEntry]
}

type AssetEntry {
    id: ID!
    asset: Asset!
    validity: Validity!
    showTime: Int
    animationIn: Style
    animationOut: Style
    position: Int
}

input CreateAssetListInput {
    name: String!
    type: String!
    animationIn: String
    animationOut: String
    validityEnabled: Boolean
    validFrom: Date
    validTo: Date
    prioritized: Boolean
    enabled: Boolean!
}

input UpdateAssetListInput {
    name: String
    type: String
    animationIn: String
    animationOut: String
    validityEnabled: Boolean
    validFrom: Date
    validTo: Date
    prioritized: Boolean
    enabled: Boolean
}

input FindAssetListInput {
    id: ID
    name: String
    type: String
    prioritized: Boolean
    enabled: Boolean
}

input AssetAssignInput {
    asset: String!
    validityEnabled: Boolean!
    validFrom: Date
    validTo: Date
    showTime: Int
    animationIn: String
    animationOut: String
    position: Int
}

extend type Query {
    findAssetList(data: FindAssetListInput!): AssetList!
    findAllAssetLists(data: FindAssetListInput!): [AssetList]!
}

extend type Mutation {
    createAssetList(data: CreateAssetListInput!): AssetList!
    updateAssetList(id: ID!, data: UpdateAssetListInput!): AssetList!
    deleteAssetList(id: ID!): AssetList!
    totalDeleteAssetList(id: ID!): Boolean!

    assignAssetToAssetList(id: ID!, data: AssetAssignInput!): AssetList!
    removeAssetFromAssetList(id: ID!, assetEntry: ID!): AssetList!
}